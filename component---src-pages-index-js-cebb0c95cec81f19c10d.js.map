{"version":3,"sources":["webpack:///./src/components/icon/scrollDown.js","webpack:///./src/components/intro/intro.js","webpack:///./src/components/card/card.js","webpack:///./src/components/article/article.js","webpack:///./src/pages/index.js"],"names":["className","Style","iconWrapper","data-sal","data-sal-easing","scrollDown","introData","title","lead","introWrapper","sal","articleData","description","background","mockup","pageAlias","bgColor","articleLink","paintDrip","to","hex","cardWrapper","content","hugeTitle","contentLink","y","img","fluid","childImageSharp","alt","query","render","data","articleWrapper","allStrapiArticles","edges","map","node","key","id","seo","crumb","allStrapiIntros"],"mappings":"y2aAGe,oBACb,yBACEA,UAAWC,IAAMC,YACjBC,WAAS,WACTC,kBAAgB,qBAEhB,yBAAKJ,UAAWC,IAAMI,eCHX,sBAAGC,UAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAAvB,OACb,yBAAKR,UAAWC,IAAMQ,aAAe,SACnC,yBAAKT,UAAU,iBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,wBACEA,UAAWC,IAAMS,IACjBP,WAAS,WACTC,kBAAgB,qBAEfG,GAEH,uBACEP,UAAWC,IAAMO,KAAO,QACxBL,WAAS,WACTC,kBAAgB,qBAEfI,GAEH,kBAAC,EAAD,W,wHCjBK,sBACbG,YAAeJ,EADF,EACEA,MAAOK,EADT,EACSA,YAAaC,EADtB,EACsBA,WAAYC,EADlC,EACkCA,OAAQC,EAD1C,EAC0CA,UAAWC,EADrD,EACqDA,QADrD,OAGb,kBAAC,IAAD,CACEhB,UAAWC,IAAMgB,YACjBC,WAAS,EACTC,GAAE,GAAKJ,EACPK,IAAKJ,GAEL,yBAAKhB,UAAWC,IAAMoB,aACpB,yBAAKrB,UAAWC,IAAMqB,SACpB,wBAAItB,UAAWC,IAAMsB,WAAYhB,GACjC,uBAAGP,UAAWC,IAAMW,aAAcA,GAClC,kBAAC,IAAD,CACEZ,UAAWC,IAAMuB,YACjBN,WAAS,EACTC,GAAE,GAAKJ,EACPK,IAAKJ,GAJP,kBAOF,yBAAKhB,UAAWC,IAAMa,OAAQX,WAAS,WAAWC,kBAAgB,QAChE,kBAAC,WAAD,CAAUqB,EAAG,CAAC,IAAK,KACjB,kBAAC,IAAD,CACEzB,UAAWC,IAAMyB,IACjBC,MAAOb,EAAOc,gBAAgBD,MAC9BE,IAAK,cAAgBtB,MAI3B,yBAAKP,UAAWC,IAAMY,YACpB,kBAAC,IAAD,CACEb,UAAWC,IAAMyB,IACjBC,MAAOd,EAAWe,gBAAgBD,MAClCE,IAAK,mBAAqBtB,QCnCrB,oBACb,kBAAC,cAAD,CACEuB,MAAK,aASLC,OAAQ,SAAAC,GAAI,OACV,yBACEhC,UAAWC,IAAMgC,eACjB9B,WAAS,OACTC,kBAAgB,QAEhB,yBAAKJ,UAAU,0BACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACZgC,EAAKE,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,EAAD,CAAM1B,YAAa0B,EAAMC,IAAKD,EAAKE,aApBjD,UCPF,sCAOe,0BAAGP,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,CAAQQ,IAAI,OAAOC,MAAM,QACvB,iCACGT,EAAKU,gBAAgBP,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,kBAAC,EAAD,CAAO/B,UAAW+B,EAAMC,IAAKD,EAAKE,SAGtC,iCACE,kBAAC,EAAD,SARS,IAaFT,EAAK","file":"component---src-pages-index-js-cebb0c95cec81f19c10d.js","sourcesContent":["import React from \"react\"\nimport Style from \"./scrollDown.module.scss\"\n\nexport default () => (\n  <div\n    className={Style.iconWrapper}\n    data-sal=\"slide-up\"\n    data-sal-easing=\"ease-in-out-cubic\"\n  >\n    <div className={Style.scrollDown}></div>\n  </div>\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Style from \"./intro.module.scss\"\nimport { ScrollDown } from \"../icon/icon\"\n\nexport default ({ introData: { title, lead } }) => (\n  <div className={Style.introWrapper + \" mb-3\"}>\n    <div className=\"gridContainer\">\n      <div className=\"grid-3\">\n        <div className=\"col-12_lg-8\">\n          <h1\n            className={Style.sal}\n            data-sal=\"slide-up\"\n            data-sal-easing=\"ease-in-out-cubic\"\n          >\n            {title}\n          </h1>\n          <p\n            className={Style.lead + \" mb-1\"}\n            data-sal=\"slide-up\"\n            data-sal-easing=\"ease-in-out-cubic\"\n          >\n            {lead}\n          </p>\n          <ScrollDown />\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const query = graphql`\n  fragment fragmentIntroNode on StrapiIntrosEdge {\n    node {\n      title\n      lead\n    }\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport Img from \"gatsby-image\"\nimport { Parallax } from \"react-scroll-parallax\"\n\nimport Style from \"./card.module.scss\"\n\nexport default ({\n  articleData: { title, description, background, mockup, pageAlias, bgColor },\n}) => (\n  <AniLink\n    className={Style.articleLink}\n    paintDrip\n    to={`${pageAlias}`}\n    hex={bgColor}\n  >\n    <div className={Style.cardWrapper}>\n      <div className={Style.content}>\n        <h1 className={Style.hugeTitle}>{title}</h1>\n        <p className={Style.description}>{description}</p>\n        <AniLink\n          className={Style.contentLink}\n          paintDrip\n          to={`${pageAlias}`}\n          hex={bgColor}\n        >Mehr erfahren</AniLink>\n      </div>\n      <div className={Style.mockup} data-sal=\"slide-up\" data-sal-easing=\"ease\">\n        <Parallax y={[16, -16]}>\n          <Img\n            className={Style.img}\n            fluid={mockup.childImageSharp.fluid}\n            alt={\"Mockup für \" + title}\n          />\n        </Parallax>\n      </div>\n      <div className={Style.background}>\n        <Img\n          className={Style.img}\n          fluid={background.childImageSharp.fluid}\n          alt={\"Hintergrund für \" + title}\n        />\n      </div>\n    </div>\n  </AniLink>\n)\n\nexport const query = graphql`\n  fragment fragmentArticleData on StrapiArticlesEdge {\n    node {\n      pageAlias\n      bgColor\n      project\n      role\n      status\n      title\n      strapiId\n      description\n      background {\n        childImageSharp {\n          fluid(maxWidth: 1920, quality: 95) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n      mockup {\n        childImageSharp {\n          fluid(maxWidth: 1080) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Style from \"./article.module.scss\"\nimport Card from \"../card/card\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query fetchArticleData {\n        allStrapiArticles {\n          edges {\n            ...fragmentArticleData\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        className={Style.articleWrapper}\n        data-sal=\"fade\"\n        data-sal-easing=\"ease\"\n      >\n        <div className=\"gridContainer-noGutter\">\n          <div className=\"grid-noBottom\">\n            <div className=\"col\">\n              {data.allStrapiArticles.edges.map(({ node }) => (\n                <Card articleData={node} key={node.id} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nimport Intro from \"../components/intro/intro\"\nimport Article from \"../components/article/article\"\n\nexport default ({ data }) => (\n  <Layout seo=\"Home\" crumb=\"Home\">\n    <section>\n      {data.allStrapiIntros.edges.map(({ node }) => (\n        <Intro introData={node} key={node.id} />\n      ))}\n    </section>\n    <section>\n      <Article />\n    </section>\n  </Layout>\n)\n\nexport const query = graphql`\n  query fetchIntroData {\n    allStrapiIntros(filter: { strapiId: { eq: 1 } }) {\n      edges {\n        ...fragmentIntroNode\n      }\n    }\n  }\n`\n"],"sourceRoot":""}